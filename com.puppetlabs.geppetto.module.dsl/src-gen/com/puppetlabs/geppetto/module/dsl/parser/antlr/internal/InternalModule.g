/*
* generated by Xtext
*/
grammar InternalModule;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.puppetlabs.geppetto.module.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.puppetlabs.geppetto.module.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.puppetlabs.geppetto.module.dsl.services.ModuleGrammarAccess;

}

@parser::members {

 	private ModuleGrammarAccess grammarAccess;
 	
    public InternalModuleParser(TokenStream input, ModuleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected ModuleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getModelAccess().getJsonMetadataParserRuleCall()); 
    }
    this_JsonMetadata_0=ruleJsonMetadata
    { 
        $current = $this_JsonMetadata_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonMetadata
entryRuleJsonMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonMetadataRule()); }
	 iv_ruleJsonMetadata=ruleJsonMetadata 
	 { $current=$iv_ruleJsonMetadata.current; } 
	 EOF 
;

// Rule JsonMetadata
ruleJsonMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonMetadataAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonMetadataAccess().getPairsMetadataPairParserRuleCall_1_0()); 
	    }
		lv_pairs_1_0=ruleMetadataPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonMetadataRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_1_0, 
        		"MetadataPair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonMetadataAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonMetadataAccess().getPairsMetadataPairParserRuleCall_2_1_0()); 
	    }
		lv_pairs_3_0=ruleMetadataPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonMetadataRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_3_0, 
        		"MetadataPair");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonMetadataAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleJsonObject
entryRuleJsonObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonObjectRule()); }
	 iv_ruleJsonObject=ruleJsonObject 
	 { $current=$iv_ruleJsonObject.current; } 
	 EOF 
;

// Rule JsonObject
ruleJsonObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJsonObjectAccess().getJsonObjectAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJsonObjectAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJsonObjectAccess().getPairsPairParserRuleCall_2_0_0()); 
	    }
		lv_pairs_2_0=rulePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonObjectRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_2_0, 
        		"Pair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJsonObjectAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonObjectAccess().getPairsPairParserRuleCall_2_1_1_0()); 
	    }
		lv_pairs_4_0=rulePair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonObjectRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_4_0, 
        		"Pair");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJsonObjectAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleMetadataPair
entryRuleMetadataPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataPairRule()); }
	 iv_ruleMetadataPair=ruleMetadataPair 
	 { $current=$iv_ruleMetadataPair.current; } 
	 EOF 
;

// Rule MetadataPair
ruleMetadataPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getAuthorPairParserRuleCall_0()); 
    }
    this_AuthorPair_0=ruleAuthorPair
    { 
        $current = $this_AuthorPair_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getDependenciesPairParserRuleCall_1()); 
    }
    this_DependenciesPair_1=ruleDependenciesPair
    { 
        $current = $this_DependenciesPair_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getIssuesUrlPairParserRuleCall_2()); 
    }
    this_IssuesUrlPair_2=ruleIssuesUrlPair
    { 
        $current = $this_IssuesUrlPair_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getLicensePairParserRuleCall_3()); 
    }
    this_LicensePair_3=ruleLicensePair
    { 
        $current = $this_LicensePair_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getNamePairParserRuleCall_4()); 
    }
    this_NamePair_4=ruleNamePair
    { 
        $current = $this_NamePair_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getProjectPagePairParserRuleCall_5()); 
    }
    this_ProjectPagePair_5=ruleProjectPagePair
    { 
        $current = $this_ProjectPagePair_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getSourcePairParserRuleCall_6()); 
    }
    this_SourcePair_6=ruleSourcePair
    { 
        $current = $this_SourcePair_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getSummaryPairParserRuleCall_7()); 
    }
    this_SummaryPair_7=ruleSummaryPair
    { 
        $current = $this_SummaryPair_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getRequirementsPairParserRuleCall_8()); 
    }
    this_RequirementsPair_8=ruleRequirementsPair
    { 
        $current = $this_RequirementsPair_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getOperatingsystemSupportPairParserRuleCall_9()); 
    }
    this_OperatingsystemSupportPair_9=ruleOperatingsystemSupportPair
    { 
        $current = $this_OperatingsystemSupportPair_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getTagsPairParserRuleCall_10()); 
    }
    this_TagsPair_10=ruleTagsPair
    { 
        $current = $this_TagsPair_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getVersionPairParserRuleCall_11()); 
    }
    this_VersionPair_11=ruleVersionPair
    { 
        $current = $this_VersionPair_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMetadataPairAccess().getUnrecognizedMetadataPairParserRuleCall_12()); 
    }
    this_UnrecognizedMetadataPair_12=ruleUnrecognizedMetadataPair
    { 
        $current = $this_UnrecognizedMetadataPair_12.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAuthorPair
entryRuleAuthorPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorPairRule()); }
	 iv_ruleAuthorPair=ruleAuthorPair 
	 { $current=$iv_ruleAuthorPair.current; } 
	 EOF 
;

// Rule AuthorPair
ruleAuthorPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"author"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getAuthorPairAccess().getNameAuthorKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAuthorPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"author\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAuthorPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthorPairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthorPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDependenciesPair
entryRuleDependenciesPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependenciesPairRule()); }
	 iv_ruleDependenciesPair=ruleDependenciesPair 
	 { $current=$iv_ruleDependenciesPair.current; } 
	 EOF 
;

// Rule DependenciesPair
ruleDependenciesPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"dependencies"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getDependenciesPairAccess().getNameDependenciesKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDependenciesPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"dependencies\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependenciesPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDependenciesPairAccess().getValueDependencyArrayParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleDependencyArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependenciesPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"DependencyArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIssuesUrlPair
entryRuleIssuesUrlPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIssuesUrlPairRule()); }
	 iv_ruleIssuesUrlPair=ruleIssuesUrlPair 
	 { $current=$iv_ruleIssuesUrlPair.current; } 
	 EOF 
;

// Rule IssuesUrlPair
ruleIssuesUrlPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"issues_url"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getIssuesUrlPairAccess().getNameIssues_urlKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIssuesUrlPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"issues_url\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIssuesUrlPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIssuesUrlPairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIssuesUrlPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLicensePair
entryRuleLicensePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLicensePairRule()); }
	 iv_ruleLicensePair=ruleLicensePair 
	 { $current=$iv_ruleLicensePair.current; } 
	 EOF 
;

// Rule LicensePair
ruleLicensePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"license"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getLicensePairAccess().getNameLicenseKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLicensePairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"license\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLicensePairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLicensePairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLicensePairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamePair
entryRuleNamePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamePairRule()); }
	 iv_ruleNamePair=ruleNamePair 
	 { $current=$iv_ruleNamePair.current; } 
	 EOF 
;

// Rule NamePair
ruleNamePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"name"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getNamePairAccess().getNameNameKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamePairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"name\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamePairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamePairAccess().getValueModuleNameParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleModuleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamePairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ModuleName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOperatingsystemSupportPair
entryRuleOperatingsystemSupportPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatingsystemSupportPairRule()); }
	 iv_ruleOperatingsystemSupportPair=ruleOperatingsystemSupportPair 
	 { $current=$iv_ruleOperatingsystemSupportPair.current; } 
	 EOF 
;

// Rule OperatingsystemSupportPair
ruleOperatingsystemSupportPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"operatingsystem_support"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getOperatingsystemSupportPairAccess().getNameOperatingsystem_supportKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperatingsystemSupportPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"operatingsystem_support\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOperatingsystemSupportPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperatingsystemSupportPairAccess().getValueOSArrayParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleOSArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperatingsystemSupportPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"OSArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProjectPagePair
entryRuleProjectPagePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectPagePairRule()); }
	 iv_ruleProjectPagePair=ruleProjectPagePair 
	 { $current=$iv_ruleProjectPagePair.current; } 
	 EOF 
;

// Rule ProjectPagePair
ruleProjectPagePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"project_page"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getProjectPagePairAccess().getNameProject_pageKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectPagePairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"project_page\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProjectPagePairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProjectPagePairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProjectPagePairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRequirementsPair
entryRuleRequirementsPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementsPairRule()); }
	 iv_ruleRequirementsPair=ruleRequirementsPair 
	 { $current=$iv_ruleRequirementsPair.current; } 
	 EOF 
;

// Rule RequirementsPair
ruleRequirementsPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"requirements"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRequirementsPairAccess().getNameRequirementsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementsPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"requirements\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRequirementsPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementsPairAccess().getValueRequirementArrayParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleRequirementArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementsPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RequirementArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSourcePair
entryRuleSourcePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSourcePairRule()); }
	 iv_ruleSourcePair=ruleSourcePair 
	 { $current=$iv_ruleSourcePair.current; } 
	 EOF 
;

// Rule SourcePair
ruleSourcePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"source"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSourcePairAccess().getNameSourceKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSourcePairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"source\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSourcePairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSourcePairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSourcePairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSummaryPair
entryRuleSummaryPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSummaryPairRule()); }
	 iv_ruleSummaryPair=ruleSummaryPair 
	 { $current=$iv_ruleSummaryPair.current; } 
	 EOF 
;

// Rule SummaryPair
ruleSummaryPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"summary"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSummaryPairAccess().getNameSummaryKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSummaryPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"summary\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSummaryPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSummaryPairAccess().getValueStringLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSummaryPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTagsPair
entryRuleTagsPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagsPairRule()); }
	 iv_ruleTagsPair=ruleTagsPair 
	 { $current=$iv_ruleTagsPair.current; } 
	 EOF 
;

// Rule TagsPair
ruleTagsPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"tags"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getTagsPairAccess().getNameTagsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTagsPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"tags\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTagsPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagsPairAccess().getValueTagArrayParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleTagArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagsPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"TagArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersionPair
entryRuleVersionPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionPairRule()); }
	 iv_ruleVersionPair=ruleVersionPair 
	 { $current=$iv_ruleVersionPair.current; } 
	 EOF 
;

// Rule VersionPair
ruleVersionPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"version"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVersionPairAccess().getNameVersionKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVersionPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"version\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVersionPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVersionPairAccess().getValueVersionParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVersionPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Version");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUnrecognizedMetadataPair
entryRuleUnrecognizedMetadataPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnrecognizedMetadataPairRule()); }
	 iv_ruleUnrecognizedMetadataPair=ruleUnrecognizedMetadataPair 
	 { $current=$iv_ruleUnrecognizedMetadataPair.current; } 
	 EOF 
;

// Rule UnrecognizedMetadataPair
ruleUnrecognizedMetadataPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getUnrecognizedMetadataPairAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnrecognizedMetadataPairRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnrecognizedMetadataPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedMetadataPairAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedMetadataPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringArray
entryRuleStringArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringArrayRule()); }
	 iv_ruleStringArray=ruleStringArray 
	 { $current=$iv_ruleStringArray.current; } 
	 EOF 
;

// Rule StringArray
ruleStringArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStringArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStringArrayAccess().getValueStringLiteralParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStringArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringArrayAccess().getValueStringLiteralParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStringArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDependencyArray
entryRuleDependencyArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyArrayRule()); }
	 iv_ruleDependencyArray=ruleDependencyArray 
	 { $current=$iv_ruleDependencyArray.current; } 
	 EOF 
;

// Rule DependencyArray
ruleDependencyArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDependencyArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDependencyArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyArrayAccess().getValueDependencyObjectParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleDependencyObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"DependencyObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDependencyArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDependencyArrayAccess().getValueDependencyObjectParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleDependencyObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDependencyArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"DependencyObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDependencyArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDependencyObject
entryRuleDependencyObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyObjectRule()); }
	 iv_ruleDependencyObject=ruleDependencyObject 
	 { $current=$iv_ruleDependencyObject.current; } 
	 EOF 
;

// Rule DependencyObject
ruleDependencyObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getDependencyObjectAccess().getJsonDependencyParserRuleCall()); 
    }
    this_JsonDependency_0=ruleJsonDependency
    { 
        $current = $this_JsonDependency_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonDependency
entryRuleJsonDependency returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonDependencyRule()); }
	 iv_ruleJsonDependency=ruleJsonDependency 
	 { $current=$iv_ruleJsonDependency.current; } 
	 EOF 
;

// Rule JsonDependency
ruleJsonDependency returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonDependencyAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonDependencyAccess().getPairsDependencyPairParserRuleCall_1_0()); 
	    }
		lv_pairs_1_0=ruleDependencyPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonDependencyRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_1_0, 
        		"DependencyPair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonDependencyAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonDependencyAccess().getPairsDependencyPairParserRuleCall_2_1_0()); 
	    }
		lv_pairs_3_0=ruleDependencyPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonDependencyRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_3_0, 
        		"DependencyPair");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonDependencyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDependencyPair
entryRuleDependencyPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDependencyPairRule()); }
	 iv_ruleDependencyPair=ruleDependencyPair 
	 { $current=$iv_ruleDependencyPair.current; } 
	 EOF 
;

// Rule DependencyPair
ruleDependencyPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDependencyPairAccess().getMetadataRefPairParserRuleCall_0()); 
    }
    this_MetadataRefPair_0=ruleMetadataRefPair
    { 
        $current = $this_MetadataRefPair_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDependencyPairAccess().getVRPairParserRuleCall_1()); 
    }
    this_VRPair_1=ruleVRPair
    { 
        $current = $this_VRPair_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDependencyPairAccess().getUnrecognizedRequirementPairParserRuleCall_2()); 
    }
    this_UnrecognizedRequirementPair_2=ruleUnrecognizedRequirementPair
    { 
        $current = $this_UnrecognizedRequirementPair_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMetadataRefPair
entryRuleMetadataRefPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMetadataRefPairRule()); }
	 iv_ruleMetadataRefPair=ruleMetadataRefPair 
	 { $current=$iv_ruleMetadataRefPair.current; } 
	 EOF 
;

// Rule MetadataRefPair
ruleMetadataRefPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"name"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getMetadataRefPairAccess().getNameNameKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataRefPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"name\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMetadataRefPairAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMetadataRefPairRule());
	        }
        }
	otherlv_2=RULE_STRING
	{
		newLeafNode(otherlv_2, grammarAccess.getMetadataRefPairAccess().getRefJsonMetadataCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleRequirementArray
entryRuleRequirementArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementArrayRule()); }
	 iv_ruleRequirementArray=ruleRequirementArray 
	 { $current=$iv_ruleRequirementArray.current; } 
	 EOF 
;

// Rule RequirementArray
ruleRequirementArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRequirementArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRequirementArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementArrayAccess().getValueRequirementObjectParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleRequirementObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RequirementObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementArrayAccess().getValueRequirementObjectParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleRequirementObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"RequirementObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleRequirementObject
entryRuleRequirementObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementObjectRule()); }
	 iv_ruleRequirementObject=ruleRequirementObject 
	 { $current=$iv_ruleRequirementObject.current; } 
	 EOF 
;

// Rule RequirementObject
ruleRequirementObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRequirementObjectAccess().getJsonRequirementParserRuleCall()); 
    }
    this_JsonRequirement_0=ruleJsonRequirement
    { 
        $current = $this_JsonRequirement_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonRequirement
entryRuleJsonRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonRequirementRule()); }
	 iv_ruleJsonRequirement=ruleJsonRequirement 
	 { $current=$iv_ruleJsonRequirement.current; } 
	 EOF 
;

// Rule JsonRequirement
ruleJsonRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonRequirementAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonRequirementAccess().getPairsRequirementPairParserRuleCall_1_0()); 
	    }
		lv_pairs_1_0=ruleRequirementPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonRequirementRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_1_0, 
        		"RequirementPair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonRequirementAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonRequirementAccess().getPairsRequirementPairParserRuleCall_2_1_0()); 
	    }
		lv_pairs_3_0=ruleRequirementPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonRequirementRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_3_0, 
        		"RequirementPair");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonRequirementAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleRequirementPair
entryRuleRequirementPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementPairRule()); }
	 iv_ruleRequirementPair=ruleRequirementPair 
	 { $current=$iv_ruleRequirementPair.current; } 
	 EOF 
;

// Rule RequirementPair
ruleRequirementPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'"name"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRequirementPairAccess().getNameNameKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"name\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRequirementPairAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementPairAccess().getValueRequirementNameParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleRequirementName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"RequirementName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getRequirementPairAccess().getVRPairParserRuleCall_1()); 
    }
    this_VRPair_3=ruleVRPair
    { 
        $current = $this_VRPair_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRequirementPairAccess().getUnrecognizedRequirementPairParserRuleCall_2()); 
    }
    this_UnrecognizedRequirementPair_4=ruleUnrecognizedRequirementPair
    { 
        $current = $this_UnrecognizedRequirementPair_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRequirementName
entryRuleRequirementName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementNameRule()); }
	 iv_ruleRequirementName=ruleRequirementName 
	 { $current=$iv_ruleRequirementName.current; } 
	 EOF 
;

// Rule RequirementName
ruleRequirementName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getRequirementNameAccess().getRequirementNameValueParserRuleCall()); 
    }
    this_RequirementNameValue_0=ruleRequirementNameValue
    { 
        $current = $this_RequirementNameValue_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleRequirementNameValue
entryRuleRequirementNameValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementNameValueRule()); }
	 iv_ruleRequirementNameValue=ruleRequirementNameValue 
	 { $current=$iv_ruleRequirementNameValue.current; } 
	 EOF 
;

// Rule RequirementNameValue
ruleRequirementNameValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getRequirementNameValueAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementNameValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleVRPair
entryRuleVRPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVRPairRule()); }
	 iv_ruleVRPair=ruleVRPair 
	 { $current=$iv_ruleVRPair.current; } 
	 EOF 
;

// Rule VRPair
ruleVRPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'"version_requirement"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getVRPairAccess().getNameVersion_requirementKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVRPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"version_requirement\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVRPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVRPairAccess().getValueVersionRangeParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleVersionRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVRPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"VersionRange");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUnrecognizedRequirementPair
entryRuleUnrecognizedRequirementPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnrecognizedRequirementPairRule()); }
	 iv_ruleUnrecognizedRequirementPair=ruleUnrecognizedRequirementPair 
	 { $current=$iv_ruleUnrecognizedRequirementPair.current; } 
	 EOF 
;

// Rule UnrecognizedRequirementPair
ruleUnrecognizedRequirementPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedRequirementPairAccess().getNameQ_ReqUnknownKeyParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleQ_ReqUnknownKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedRequirementPairRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Q_ReqUnknownKey");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnrecognizedRequirementPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedRequirementPairAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedRequirementPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVersionRange
entryRuleVersionRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRangeRule()); }
	 iv_ruleVersionRange=ruleVersionRange 
	 { $current=$iv_ruleVersionRange.current; } 
	 EOF 
;

// Rule VersionRange
ruleVersionRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getVersionRangeAccess().getJsonVersionRangeParserRuleCall()); 
    }
    this_JsonVersionRange_0=ruleJsonVersionRange
    { 
        $current = $this_JsonVersionRange_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonVersionRange
entryRuleJsonVersionRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonVersionRangeRule()); }
	 iv_ruleJsonVersionRange=ruleJsonVersionRange 
	 { $current=$iv_ruleJsonVersionRange.current; } 
	 EOF 
;

// Rule JsonVersionRange
ruleJsonVersionRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getJsonVersionRangeAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJsonVersionRangeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleModuleName
entryRuleModuleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleNameRule()); }
	 iv_ruleModuleName=ruleModuleName 
	 { $current=$iv_ruleModuleName.current; } 
	 EOF 
;

// Rule ModuleName
ruleModuleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getModuleNameAccess().getJsonModuleNameParserRuleCall()); 
    }
    this_JsonModuleName_0=ruleJsonModuleName
    { 
        $current = $this_JsonModuleName_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonModuleName
entryRuleJsonModuleName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonModuleNameRule()); }
	 iv_ruleJsonModuleName=ruleJsonModuleName 
	 { $current=$iv_ruleJsonModuleName.current; } 
	 EOF 
;

// Rule JsonModuleName
ruleJsonModuleName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getJsonModuleNameAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJsonModuleNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleTagArray
entryRuleTagArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagArrayRule()); }
	 iv_ruleTagArray=ruleTagArray 
	 { $current=$iv_ruleTagArray.current; } 
	 EOF 
;

// Rule TagArray
ruleTagArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTagArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTagArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTagArrayAccess().getValueTagParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTagArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTagArrayAccess().getValueTagParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Tag");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTagArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	 iv_ruleTag=ruleTag 
	 { $current=$iv_ruleTag.current; } 
	 EOF 
;

// Rule Tag
ruleTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getTagAccess().getJsonTagParserRuleCall()); 
    }
    this_JsonTag_0=ruleJsonTag
    { 
        $current = $this_JsonTag_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonTag
entryRuleJsonTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonTagRule()); }
	 iv_ruleJsonTag=ruleJsonTag 
	 { $current=$iv_ruleJsonTag.current; } 
	 EOF 
;

// Rule JsonTag
ruleJsonTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonTagAccess().getValueQ_StringOrKeyParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleQ_StringOrKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonTagRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Q_StringOrKey");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleVersion
entryRuleVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	 iv_ruleVersion=ruleVersion 
	 { $current=$iv_ruleVersion.current; } 
	 EOF 
;

// Rule Version
ruleVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getVersionAccess().getJsonVersionParserRuleCall()); 
    }
    this_JsonVersion_0=ruleJsonVersion
    { 
        $current = $this_JsonVersion_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonVersion
entryRuleJsonVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonVersionRule()); }
	 iv_ruleJsonVersion=ruleJsonVersion 
	 { $current=$iv_ruleJsonVersion.current; } 
	 EOF 
;

// Rule JsonVersion
ruleJsonVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getJsonVersionAccess().getValueSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJsonVersionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleOSArray
entryRuleOSArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOSArrayRule()); }
	 iv_ruleOSArray=ruleOSArray 
	 { $current=$iv_ruleOSArray.current; } 
	 EOF 
;

// Rule OSArray
ruleOSArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOSArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOSArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOSArrayAccess().getValueOSObjectParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleOSObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOSArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"OSObject");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOSArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOSArrayAccess().getValueOSObjectParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleOSObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOSArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"OSObject");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOSArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOSObject
entryRuleOSObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOSObjectRule()); }
	 iv_ruleOSObject=ruleOSObject 
	 { $current=$iv_ruleOSObject.current; } 
	 EOF 
;

// Rule OSObject
ruleOSObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getOSObjectAccess().getJsonOSParserRuleCall()); 
    }
    this_JsonOS_0=ruleJsonOS
    { 
        $current = $this_JsonOS_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleJsonOS
entryRuleJsonOS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonOSRule()); }
	 iv_ruleJsonOS=ruleJsonOS 
	 { $current=$iv_ruleJsonOS.current; } 
	 EOF 
;

// Rule JsonOS
ruleJsonOS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJsonOSAccess().getLeftCurlyBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonOSAccess().getPairsOSPairParserRuleCall_1_0()); 
	    }
		lv_pairs_1_0=ruleOSPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonOSRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_1_0, 
        		"OSPair");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJsonOSAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonOSAccess().getPairsOSPairParserRuleCall_2_1_0()); 
	    }
		lv_pairs_3_0=ruleOSPair		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonOSRule());
	        }
       		add(
       			$current, 
       			"pairs",
        		lv_pairs_3_0, 
        		"OSPair");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getJsonOSAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleOSPair
entryRuleOSPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOSPairRule()); }
	 iv_ruleOSPair=ruleOSPair 
	 { $current=$iv_ruleOSPair.current; } 
	 EOF 
;

// Rule OSPair
ruleOSPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'"operatingsystem"' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getOSPairAccess().getNameOperatingsystemKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOSPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "\"operatingsystem\"");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOSPairAccess().getColonKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOSPairAccess().getValueStringLiteralParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleStringLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOSPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"StringLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_name_3_0=	'"operatingsystemrelease"' 
    {
        newLeafNode(lv_name_3_0, grammarAccess.getOSPairAccess().getNameOperatingsystemreleaseKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOSPairRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_3_0, "\"operatingsystemrelease\"");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOSPairAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOSPairAccess().getValueStringArrayParserRuleCall_1_2_0()); 
	    }
		lv_value_5_0=ruleStringArray		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOSPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"StringArray");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getOSPairAccess().getUnrecognizedOSPairParserRuleCall_2()); 
    }
    this_UnrecognizedOSPair_6=ruleUnrecognizedOSPair
    { 
        $current = $this_UnrecognizedOSPair_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnrecognizedOSPair
entryRuleUnrecognizedOSPair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnrecognizedOSPairRule()); }
	 iv_ruleUnrecognizedOSPair=ruleUnrecognizedOSPair 
	 { $current=$iv_ruleUnrecognizedOSPair.current; } 
	 EOF 
;

// Rule UnrecognizedOSPair
ruleUnrecognizedOSPair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedOSPairAccess().getNameQ_OsUnknownKeyParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleQ_OsUnknownKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedOSPairRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Q_OsUnknownKey");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnrecognizedOSPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnrecognizedOSPairAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnrecognizedOSPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePair
entryRulePair returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPairRule()); }
	 iv_rulePair=rulePair 
	 { $current=$iv_rulePair.current; } 
	 EOF 
;

// Rule Pair
rulePair returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPairAccess().getNameQ_StringOrKeyParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleQ_StringOrKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"Q_StringOrKey");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPairAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPairAccess().getValueValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPairRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueAccess().getBooleanLiteralParserRuleCall_0()); 
    }
    this_BooleanLiteral_0=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getNullValueParserRuleCall_1()); 
    }
    this_NullValue_1=ruleNullValue
    { 
        $current = $this_NullValue_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getStringLiteralParserRuleCall_2()); 
    }
    this_StringLiteral_2=ruleStringLiteral
    { 
        $current = $this_StringLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getDoubleLiteralParserRuleCall_3()); 
    }
    this_DoubleLiteral_3=ruleDoubleLiteral
    { 
        $current = $this_DoubleLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getLongLiteralParserRuleCall_4()); 
    }
    this_LongLiteral_4=ruleLongLiteral
    { 
        $current = $this_LongLiteral_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getJsonObjectParserRuleCall_5()); 
    }
    this_JsonObject_5=ruleJsonObject
    { 
        $current = $this_JsonObject_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getValueAccess().getJsonArrayParserRuleCall_6()); 
    }
    this_JsonArray_6=ruleJsonArray
    { 
        $current = $this_JsonArray_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringLiteralAccess().getValueQ_StringOrKeyParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleQ_StringOrKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Q_StringOrKey");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleQ_StringOrKey
entryRuleQ_StringOrKey returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQ_StringOrKeyRule()); } 
	 iv_ruleQ_StringOrKey=ruleQ_StringOrKey 
	 { $current=$iv_ruleQ_StringOrKey.current.getText(); }  
	 EOF 
;

// Rule Q_StringOrKey
ruleQ_StringOrKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"author"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getAuthorKeyword_0()); 
    }

    |
	kw='"dependencies"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getDependenciesKeyword_1()); 
    }

    |
	kw='"issues_url"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getIssues_urlKeyword_2()); 
    }

    |
	kw='"license"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getLicenseKeyword_3()); 
    }

    |
	kw='"name"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getNameKeyword_4()); 
    }

    |
	kw='"operatingsystem"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getOperatingsystemKeyword_5()); 
    }

    |
	kw='"operatingsystem_support"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getOperatingsystem_supportKeyword_6()); 
    }

    |
	kw='"operatingsystemrelease"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getOperatingsystemreleaseKeyword_7()); 
    }

    |
	kw='"parameters"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getParametersKeyword_8()); 
    }

    |
	kw='"project_page"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getProject_pageKeyword_9()); 
    }

    |
	kw='"requirements"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getRequirementsKeyword_10()); 
    }

    |
	kw='"source"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getSourceKeyword_11()); 
    }

    |
	kw='"summary"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getSummaryKeyword_12()); 
    }

    |
	kw='"tags"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getTagsKeyword_13()); 
    }

    |
	kw='"version"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getVersionKeyword_14()); 
    }

    |
	kw='"version_requirement"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_StringOrKeyAccess().getVersion_requirementKeyword_15()); 
    }

    |    this_STRING_16=RULE_STRING    {
		$current.merge(this_STRING_16);
    }

    { 
    newLeafNode(this_STRING_16, grammarAccess.getQ_StringOrKeyAccess().getSTRINGTerminalRuleCall_16()); 
    }
)
    ;





// Entry rule entryRuleQ_ReqUnknownKey
entryRuleQ_ReqUnknownKey returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQ_ReqUnknownKeyRule()); } 
	 iv_ruleQ_ReqUnknownKey=ruleQ_ReqUnknownKey 
	 { $current=$iv_ruleQ_ReqUnknownKey.current.getText(); }  
	 EOF 
;

// Rule Q_ReqUnknownKey
ruleQ_ReqUnknownKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"author"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getAuthorKeyword_0()); 
    }

    |
	kw='"dependencies"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getDependenciesKeyword_1()); 
    }

    |
	kw='"issues_url"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getIssues_urlKeyword_2()); 
    }

    |
	kw='"license"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getLicenseKeyword_3()); 
    }

    |
	kw='"operatingsystem"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getOperatingsystemKeyword_4()); 
    }

    |
	kw='"operatingsystem_support"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getOperatingsystem_supportKeyword_5()); 
    }

    |
	kw='"operatingsystemrelease"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getOperatingsystemreleaseKeyword_6()); 
    }

    |
	kw='"parameters"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getParametersKeyword_7()); 
    }

    |
	kw='"project_page"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getProject_pageKeyword_8()); 
    }

    |
	kw='"requirements"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getRequirementsKeyword_9()); 
    }

    |
	kw='"source"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getSourceKeyword_10()); 
    }

    |
	kw='"summary"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getSummaryKeyword_11()); 
    }

    |
	kw='"tags"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getTagsKeyword_12()); 
    }

    |
	kw='"version"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_ReqUnknownKeyAccess().getVersionKeyword_13()); 
    }

    |    this_STRING_14=RULE_STRING    {
		$current.merge(this_STRING_14);
    }

    { 
    newLeafNode(this_STRING_14, grammarAccess.getQ_ReqUnknownKeyAccess().getSTRINGTerminalRuleCall_14()); 
    }
)
    ;





// Entry rule entryRuleQ_OsUnknownKey
entryRuleQ_OsUnknownKey returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQ_OsUnknownKeyRule()); } 
	 iv_ruleQ_OsUnknownKey=ruleQ_OsUnknownKey 
	 { $current=$iv_ruleQ_OsUnknownKey.current.getText(); }  
	 EOF 
;

// Rule Q_OsUnknownKey
ruleQ_OsUnknownKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"author"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getAuthorKeyword_0()); 
    }

    |
	kw='"dependencies"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getDependenciesKeyword_1()); 
    }

    |
	kw='"issues_url"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getIssues_urlKeyword_2()); 
    }

    |
	kw='"license"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getLicenseKeyword_3()); 
    }

    |
	kw='"name"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getNameKeyword_4()); 
    }

    |
	kw='"operatingsystem_support"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getOperatingsystem_supportKeyword_5()); 
    }

    |
	kw='"parameters"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getParametersKeyword_6()); 
    }

    |
	kw='"project_page"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getProject_pageKeyword_7()); 
    }

    |
	kw='"requirements"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getRequirementsKeyword_8()); 
    }

    |
	kw='"source"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getSourceKeyword_9()); 
    }

    |
	kw='"summary"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getSummaryKeyword_10()); 
    }

    |
	kw='"tags"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getTagsKeyword_11()); 
    }

    |
	kw='"version"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getVersionKeyword_12()); 
    }

    |
	kw='"version_requirement"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQ_OsUnknownKeyAccess().getVersion_requirementKeyword_13()); 
    }

    |    this_STRING_14=RULE_STRING    {
		$current.merge(this_STRING_14);
    }

    { 
    newLeafNode(this_STRING_14, grammarAccess.getQ_OsUnknownKeyAccess().getSTRINGTerminalRuleCall_14()); 
    }
)
    ;





// Entry rule entryRuleNullValue
entryRuleNullValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	 iv_ruleNullValue=ruleNullValue 
	 { $current=$iv_ruleNullValue.current; } 
	 EOF 
;

// Rule NullValue
ruleNullValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNullValueAccess().getValueNULLParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleNULL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNullValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"NULL");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleLiteralRule()); }
	 iv_ruleDoubleLiteral=ruleDoubleLiteral 
	 { $current=$iv_ruleDoubleLiteral.current; } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_DOUBLE
		{
			newLeafNode(lv_value_0_0, grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDoubleLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"DOUBLE");
	    }

)
)
;





// Entry rule entryRuleLongLiteral
entryRuleLongLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongLiteralRule()); }
	 iv_ruleLongLiteral=ruleLongLiteral 
	 { $current=$iv_ruleLongLiteral.current; } 
	 EOF 
;

// Rule LongLiteral
ruleLongLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_value_0_0=RULE_LONG
		{
			newLeafNode(lv_value_0_0, grammarAccess.getLongLiteralAccess().getValueLONGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLongLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"LONG");
	    }

)
)
;





// Entry rule entryRuleJsonArray
entryRuleJsonArray returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJsonArrayRule()); }
	 iv_ruleJsonArray=ruleJsonArray 
	 { $current=$iv_ruleJsonArray.current; } 
	 EOF 
;

// Rule JsonArray
ruleJsonArray returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getJsonArrayAccess().getJsonArrayAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getJsonArrayAccess().getLeftSquareBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getJsonArrayAccess().getValueValueParserRuleCall_2_0_0()); 
	    }
		lv_value_2_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getJsonArrayAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJsonArrayAccess().getValueValueParserRuleCall_2_1_1_0()); 
	    }
		lv_value_4_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJsonArrayRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJsonArrayAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanLiteralAccess().getValueBOOLParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleBOOL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"BOOL");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBOOL
entryRuleBOOL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBOOLRule()); } 
	 iv_ruleBOOL=ruleBOOL 
	 { $current=$iv_ruleBOOL.current.getText(); }  
	 EOF 
;

// Rule BOOL
ruleBOOL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getBOOLAccess().getFalseKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNULL
entryRuleNULL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNULLRule()); } 
	 iv_ruleNULL=ruleNULL 
	 { $current=$iv_ruleNULL.current.getText(); }  
	 EOF 
;

// Rule NULL
ruleNULL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNULLAccess().getNullKeyword()); 
    }

    ;





fragment RULE_DIGIT : '0'..'9';

fragment RULE_EXPONENT : ('e'|'E') ('+'|'-')? RULE_DIGIT+;

RULE_LONG : '-'? RULE_DIGIT+;

RULE_DOUBLE : ('-'? RULE_DIGIT+ RULE_EXPONENT|'-'? RULE_DIGIT+ '.' RULE_DIGIT+ RULE_EXPONENT?);

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_WS : (' '|'\t'|'\r'|'\n')+;


